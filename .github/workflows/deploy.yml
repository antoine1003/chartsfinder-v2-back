name: Deploy to VPS

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Set up SSH
                run: |
                    mkdir -p ~/.ssh
                    echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                    chmod 600 ~/.ssh/id_rsa
                    ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

            -   name: Rsync files to VPS with correct user
                run: |
                    rsync -avz --delete \
                      --exclude=".git*" \
                      --exclude="node_modules" \
                      --exclude="vendor" \
                      --exclude="var/cache" \
                      --exclude="var/log" \
                      --chown=adautry:www-data \
                      ./ \
                      ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/cf-v2/back

            -   name: Run remote deployment commands
                run: |
                    ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                    set -euo pipefail
                    cd /var/www/cf-v2/back

                    # 1) Nettoyer le cache avant de modifier quoi que ce soit
                    rm -rf var/cache/*

                    export APP_ENV=prod APP_DEBUG=0
                    export COMPOSER_NO_INTERACTION=1
                    umask 002

                    # 2) Mettre à jour .env.local avec la clé API
                    touch .env.local
                    if grep -q "^MAILER_DSN=" .env.local; then
                    sed -i "s|^MAILER_DSN=.*|MAILER_DSN=brevo+api://${{ secrets.BREVO_API_KEY }}@default|" .env.local
                    else
                    echo "MAILER_DSN=brevo+api://${{ secrets.BREVO_API_KEY }}@default" >> .env.local
                    fi
                    echo "✅ Clé API mise à jour dans .env.local"

                    # 3) Installer les dépendances
                    composer install --prefer-dist --no-dev --optimize-autoloader

                    # 4) Compiler l'environnement
                    composer dump-env prod

                    # 5) Recréer le cache proprement
                    php bin/console cache:clear --env=prod --no-warmup
                    php bin/console d:s:u -f
                    php bin/console cache:warmup --env=prod

                    echo "✅ Déploiement terminé sur le serveur"
                    EOF
